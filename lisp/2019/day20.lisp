(defun input () "                                         U     I     L           T     D     G
                                         T     Z     X           A     Z     G
  #######################################.#####.#####.###########.#####.#####.###########################################
  #...#.....#.......#.#.#...#.#.#.#.....#...#.....#.......#.........#.......#.#...#.............#...#...#...........#...#
  ###.###.#######.###.#.#.###.#.#.###.#.###.#.#.#######.#####.#.###.#####.###.###.#.###############.#.#####.###.#######.#
  #.....#...........................#.#.....#.#...#.....#.....#.#.#.#.......#.#.#.......#.#.....#.....#...#.#.#.#.#.....#
  ###.###.#.#.#####.###.###.###.#####.#######.#####.#.###.#.#.###.#.#######.#.###.#.#####.###.###.#######.###.#.#.###.#.#
  #.#...#.#.#.#.....#.#.#...#.........#.....#.....#.#.#.#.#.#...#...#.....#.#.....#.......#...#.#.#.....#.#...#...#...#.#
  #.#.#############.#.#.###.#.#######.#.#.#.###.###.#.#.###.#######.#.###.#.#######.#########.#.#.#.#####.###.#.#.###.###
  #.#.#.#.#.#.#.......#.#...#.#.........#.#.#...#.#.#...#...#...#...#...#.#.#...........................#.#.....#.......#
  #.#.#.#.#.#.###.#.#.#####.###.#.###.###.###.#.#.#####.#######.###.#.#.#.#.#####.#####.###.#.###.#####.#.#.###########.#
  #.....#...#.#.#.#.#.#.....#.#.#.#...#.....#.#.#.#...#.#.........#.#.#.#.....#.....#.....#.#.#.#...#.............#.#...#
  ###.###.###.#.#############.###.#######.#####.#.#.###.###.#.#.#.#.#.#.#.###.###.#############.###.###.#.#.###.###.#####
  #.........#...#.....#.........#.#.....#.....#.....#.....#.#.#.#...#.#.#...#.#...........#.......#...#.#.#.#.#.......#.#
  ###.#######.#####.#####.#.###.#######.#.#.#####.#.###.###########.#.#.###.#####.#########.#########.#####.#.#.#######.#
  #.#.#.#.....#...#...#...#...#.#.#.....#.#...#.#.#.#...#.#...#.#...#.#...#.#.#.#.#.#.#.#.#...#.#...#...#...#.#...#.....#
  #.#.#.###.#.###.#.###########.#.#####.###.###.#.###.###.#.###.###.#.#######.#.#.#.#.#.#.#.###.#.#####.###.#.#.###.#####
  #.#.....#.#.........#.#...#.......#.......#.......#.....#.....#.#.#...#...#.........#.........#.#.#.#.#.....#.#.#.....#
  #.#.#########.#.#####.#.#.#####.###.###.#.#######.#.#.#####.#.#.#.###.###.#######.#####.#####.#.#.#.#####.#####.###.#.#
  #.........#...#.#...#...#.....#.....#...#.....#...#.#...#.#.#.#.#.#.......#...#...#.#...#...............#...#...#.#.#.#
  ###.###.#######.#.#.#########.#.###.#.###########.###.###.#.#.###.#.#.#.#.###.###.#.###.###.#.#.#.#.###########.#.###.#
  #.....#...#.....#.#.#.#.........#...#.#...#.......#.#.#...#.#.....#.#.#.#.#.#.#.....#.....#.#.#.#.#...#...#.#...#.#...#
  ###.###.#####.#.#.###.#############.#####.###.###.#.#.###.#.###.#.#.###.###.#.#.###.###.#.###.#########.###.###.#.#.#.#
  #.....#.#.#.#.#.#.....#...#.#...#.#.#.#.......#...#...#...#...#.#.#...#.#.........#.#...#...#.#.......#.#.......#.#.#.#
  ###.###.#.#.###.###.###.#.#.###.#.#.#.#########.#####.#.#.#.#.#####.#####.#.###.#####.#.#######.#######.###.#.###.#.###
  #.....#.#...#...#.#.#.#.#...#.............#.#.....#...#.#.#.#.#.........#.#...#...#.#.#.........#.....#...#.#.........#
  ###.#######.###.#.#.#.#####.#####.###.#.###.#.###.#.###.#.###.#####.#######.#.###.#.#.#######.#.#####.#.#####.#########
  #.......#...#...#.#...#.....#.#.#.#...#.#.#...#...#.....#.#.....#.....#.#...#.#.............#.#...#...#...#.........#.#
  #.#.###.###.#.#.#.###.#.###.#.#.#####.###.#######.#######.#.###.###.###.#######.###.###.#########.###.#.#####.###.###.#
  #.#...#.#...#.#.......#.#.#.....#...#.#...#.........#.....#...#.#.......#.........#...#.....#.#.#.#.#.#.#.#.#...#.....#
  #.###.###.#######.###.###.#.#####.###.#.#########.###.#####.#######.#.#######.###.#######.###.#.###.#.#.#.#.#.#########
  #.#.......#...#.#.#.#.....#.....#...#.....#.#.....#...#.#.#.....#.#.#...#.#...#.......#.#.........#.........#...#...#.#
  ###.#########.#.###.###.#.###.###.###.#####.###.#####.#.#.###.###.#.#####.#######.###.#.#####.#.###.###.#####.#.###.#.#
  #...#.....#...........#.#...#...#.......#.........#.......#.......#...........#...#.........#.#.#.#.#...#...#.#.#.....#
  ###.#.#######.#####.#####.###.#######.#########.#######.###.#######.###########.#######.#######.#.#####.#.#.#.###.#####
  #.#...#...#.#.#.........#...#...#    D         Z       L   D       H           N      #...#...#.#.#.....#.#.#.....#.#.#
  #.###.###.#.###.#####.#####.#.#.#    Z         O       M   Q       T           J      #######.###.#####.#.###.#####.#.#
  #.......#.#.#.#.#.#.....#.#...#.#                                                     #...#.........#...#.......#.#.#.#
  ###.#####.#.#.###.###.###.#.###.#                                                     #.#.#.###########.###.#####.#.#.#
  #...#.....#...#...#.......#.#.#.#                                                   CQ..#.#.....#.#.#...........#.....#
  ###.#####.#.#####.###.#.###.#.###                                                     #.###.###.#.#.#.#########.###.#.#
  #.....................#.#.....#.#                                                     #...#.#.#.#.........#...#...#.#..OS
  ###.#.#.#.#.#.#######.#####.#.#.#                                                     #.###.#.#########.#.#.#.###.#.###
  #...#.#.#.#.#...#.......#...#.#..OS                                                   #...#.#.#...#...#.#...#.#.#.#...#
  #.#####.#.#######.#.#####.#.#.#.#                                                     #.###.#.###.###########.#.#.#.###
  #.#.#...#.#.#.#.#.#.#.#.#.#.#...#                                                     #.........................#.....#
  #.#.#######.#.#.###.###.###.#####                                                     #################################
NJ..........#.....#.#.........#.#.#                                                     #...#...............#.#.....#...#
  #############.###.###########.#.#                                                     #.#.#.#.#.###.###.###.###.#.#.#.#
  #.......#.....#...........#......RW                                                   #.#...#.#.#.....#.......#.#...#.#
  #.#####.#.###.#.#####.###.#.#.###                                                     #.#.#.###.###.###.#####.#.#.###.#
  #...#...#...#.#.#.#...#.....#...#                                                     #.#.#.#.#.#...#...#.#...#.#...#..WL
  ###.#.###.###.#.###.###.#########                                                     #.#####.#####.#.###.#.#.#.#.###.#
  #.#.#.....#...#...#.#.....#...#.#                                                   VO....#.#.......#.#...#.#...#.#.#.#
  #.#.#.#.###.#####.###.#.###.###.#                                                     ###.#.#######.#.###.###.#####.###
HD....#.#.#.#.........#.#.#.#.....#                                                     #.....#.#.#...#.#.#...#.#.....#.#
  #########.###############.###.###                                                     ###.#.#.#.#######.#.#######.#.#.#
  #...#.#.............#.......#...#                                                     #...#...#.#.....#.#...#.#...#....KW
  #.#.#.#.#.#.#.#.###.#####.#.#.#.#                                                     #########.#.#####.#.###.#.###.###
  #.#...#.#.#.#.#.#.....#...#.#.#.#                                                   SB....#.#...#...#.#.....#.#...#...#
  #.#.###.###.###.#####.#.###.#.#.#                                                     #.#.#.#.###.###.#.#.###.#.###.###
  #.#.#.....#.#.#.#.#...#...#...#.#                                                     #.#...............#.......#...#.#
  #.#.###.#.#.#.###.###.#.###.###.#                                                     #####.#.#.###.#.###.###########.#
SN..#.....#.#.#.#.#.#.#...#.#.#....AR                                                   #.#...#.#.#...#...#.#.........#..HT
  #.#.#########.#.#.#.#####.#######                                                     #.#####.###.#.#######.#######.#.#
  #.#.....#.......................#                                                     #...#.#.#...#...#.#.......#...#.#
  #########.#######.#.#####.###.###                                                     ###.#.#.#########.#####.#.#.###.#
VO..#.#.#.......#.#.#...#...#...#..TA                                                 XM....#.#.#.....#.......#.#.#.#....ZZ
  #.#.#.#######.#.#.#.#########.#.#                                                     #.###.#####.#####.#.#.###.#.###.#
  #...........#...#.#...#.........#                                                     #.................#.#.....#.....#
  ###.#.#.#######.#####.###.#.###.#                                                     #################################
  #.#.#.#.........#.#.#.#...#...#.#                                                     #.......#...........#............LM
  #.###############.#.#############                                                     #.###.#.#.###.#.###.###.#########
  #...................#...#...#.#.#                                                   IZ....#.#...#...#...#...#.......#.#
  ###.#.#.###.#.#.###.###.#.#.#.#.#                                                     #.#######.###########.#.#####.#.#
  #.#.#.#...#.#.#.#.....#...#.#....GG                                                   #.#.#.......#...#.....#.#.......#
  #.###.#######.#.#####.#.###.#.###                                                     ###.###.###.###.#.#.#####.#####.#
HR....#.....#.#.#.#...#.#.#.......#                                                     #.#...#.#.....#.#.#.......#.#...#
  ###.###.#.#.#######.#.#.#.###.###                                                     #.###.#####.###.#########.#.#.#.#
  #.......#.#.#.#.........#...#.#.#                                                     #.......#...#...........#...#.#.#
  #.#.#.#.###.#.#########.#######.#                                                     #.#################.###.#######.#
  #.#.#.#.#.#.#.#.#.........#......MJ                                                   #...#.........#...#...#.#.#...#.#
  #########.#.#.#.#######.#####.###                                                     #.#####.#######.#####.#.#.#.#####
OJ....#.#...........#.#...#.....#.#                                                   UT......#...#.#.#.#...#.#.#.....#..DQ
  #.###.#.#.#####.###.#####.###.#.#                                                     ###.###.###.#.#.#####.#.#.###.#.#
AA........#...#.............#...#.#                                                     #.....................#...#.#...#
  #########################.#####.#                                                     #########.#################.#.###
  #.....................#.#.#...#.#                                                     #.....#...#...#.........#...#...#
  ###.#.###.#.#.#.#####.#.#####.#.#                                                     #.###.###.#.#.#.#####.#.#.#.#####
YX....#.#...#.#.#.#.#...#.#.#.#...#                                                     #...#...#.#.#.......#.#...#.#.#.#
  #.#.###.#.###.###.#.###.#.#.###.#                                                     ###.#.#####.#.#######.#.###.#.#.#
  #.#.#...#...#.#.....#.........#..KW                                                   #.#.#.....#.#...#.....#.#...#....XM
  ###.###.#####.###.#.#.###.#.###.#                                                     #.#.###.###.#######.#####.#.#.#.#
  #...#.......#...#.#.....#.#.....#                                                   HR....#...........#.#.#.....#...#.#
  #####.###.###.#######.#####.###.#                                                     #.#.###.#.###.###.#########.###.#
  #.....#.....#.#.........#.....#.#                                                     #.#.#...#.#.........#.......#.#.#
  #.#.#.###.#####.#.#.#.#####.#.###    L   W     H           S   H           Y     O    #.#####.###.#######.#######.#.#.#
  #.#.#.#.....#...#.#.#.#.#...#.#.#    X   L     D           N   G           X     J    #...#...#.........#.#.#.#.....#.#
  #.###.#.#.#####.###.###.#######.#####.###.#####.###########.###.###########.#####.#####.#######.#.#########.#.#.#.#.#.#
  #...#.#.#...#.....#.......#.....#...........#.........#.#.#.#.#...#.........#.......#...#.......#.............#.#.#.#.#
  #.#########.###.###.#.#########.#####.#############.###.#.#.#.#.#######.#.#.#.###.#.###.#####.#####.#.#.###.#.###.#.#.#
  #.....#.#.#.#.....#.#.#.......#.#.#...#.#...#.......#.....#.#.#.....#...#.#.#.#...#...#...#.#.....#.#.#...#.#.#.#.#.#.#
  #.#.###.#.#.###.###.#######.#.#.#.###.#.#.###.#.#.#.#.###.#.#.#.#######.#####.#############.#.#####.###.#.#.#.#.#.###.#
  #.#.#.......#...#...#.#...#.#.............#.#.#.#.#.#.#...#...#...#.#...#.#.....#.#.#...#...#.#.....#...#.#.#.#...#...#
  #.###.#.#####.#####.#.###.###############.#.#.#####.#.###.#.#####.#.#.###.###.###.#.#.###.#.#.#######.###.###.###.#####
  #...#.#.#.#.....#.......#.......#.#.......#.......#.#...#.......#...#.#...#...............#.#.#...#.....#...#.#.......#
  #.#.###.#.#.#####.#.#.###.###.#.#.###.###.#####.#.#.###.###########.#.#.#.###.###.#.#.#.#.#######.#.#.#########.#.###.#
  #.#.#...#.....#...#.#...#.#.#.#.........#.#.....#.#.#.......#.#.#...#.#.#...#...#.#.#.#.#...#...#...#.........#.#...#.#
  #.#####.###.###.###.#######.###.###.#.#######.#########.###.#.#.###.#.#.###.#######.#########.#####.#.#.#.#.###.#.#.#.#
  #.#.....#.....#.#.....#...#.......#.#.....#.....#.#...#.#...#.......#...#.....#.#.#...#...........#.#.#.#.#...#.#.#.#.#
  #.#.#.#.#####.#####.###.###.#.###.###.#####.###.#.###.###.###.###.###.###.###.#.#.#.###.###.###.#.#.###.#.#.#####.###.#
  #.#.#.#...#...#.#.#.#...#.#.#.#.#.#.......#.#.....#.........#.#.....#.#.#.#...#.......#...#.#...#.#...#.#.#.....#.#.#.#
  #.#.#.#.#.#####.#.#####.#.#####.###.#.#.#####.#####.#####.#######.#.###.#.#######.#.#.#.#######.#.###########.#####.#.#
  #.#.#.#.#.#.....#...#.......#.....#.#.#.#...#.....#.#.......#.#.#.#...#.....#.#...#.#...#.#...#.#.#.....#.#.#...#.#...#
  #.###.#.#######.###.#######.#####.###.###.###.#############.#.#.###.###.###.#.###.#######.#.#######.#.###.#.#####.###.#
  #...#.#.#.............#.#...................#.....#.............#...#.#...#.#.#...#.....#.....#.....#.#.#.....#.#...#.#
  ###.###########.#####.#.#######.#.###.###.#.###.#.#######.#.#.#####.#.#.###.#.#.#.###.###.#####.###.###.#.#####.#.###.#
  #.......#.#.#.#.#.....#.#...#...#.#.....#.#.#...#.#.......#.#.#...#...#...#...#.#.#.......#.......#.#...#.#.#...#...#.#
  #.#.#####.#.#.#####.#.#.#.###########.#######.#.#####.#####.#####.#.#######.#.###.#.#####.#.#.#.#######.#.#.#.###.#####
  #.#.#.......#...#...#...#...#.#.........#.#...#.#...#.#.....#.....#.#.......#.#.........#...#.#...#.#.......#.........#
  #.#######.#####.###.###.#.###.#######.#.#.#.#.###.#.#####.###.#.###.#####.#.#.#####.#####.#########.#.###.#.###.#####.#
  #.#.........#.......#.............#.#.#...#.#.....#.#.....#...#.....#...#.#.#.#.#.#.#...#...#.......#.#...#.........#.#
  #####.#.#######.#####.#.###.###.###.#.#.#####.#######.#.#.#.#.#####.#.#####.###.#.#.###.#####.#.###.#.###.#####.#.###.#
  #.#...#.........#.#...#...#.#.#.#.#...#.#.......#.#...#.#.#.#.#...#.......#...#.............#.#.#.....#.....#...#...#.#
  #.#.#####.#.#####.#.###.#####.#.#.#####.###.#.###.###.###.###.#.#.#########.#######.###.###.#.#####.#####.#######.#####
  #...#.....#.#.......#...#.................#.#.#...#.#.#.....#...#...#.#.....#.#.#...#.....#.....#.#.#...#.......#.#.#.#
  #####.#.#.#.#.#.#.###########.###.#.#.#######.###.#.#.#############.#.#####.#.#.###.#########.###.#####.#.#.#.#####.#.#
  #.#.#.#.#.#.#.#.#.#.#.#.........#.#.#.#.#...#.......#...#.#...#.......#.#.#.#.....#...#.#.#...#.#.#.#.#.#.#.#.........#
  #.#.#.###.#.###.###.#.#.#####.#.###.#.#.###.#######.###.#.#.#####.#####.#.#.#.#.###.#.#.#.###.#.#.#.#.#.###.###.###.###
  #.....#...#.#...#.......#.....#...#.#.......#.......#.......#.....#.........#.#.....#.....#...............#...#.#.....#
  #########################################.#.#.#############.###.#######.#####.#########################################
                                           S R M             H   C       A     Z
                                           B W J             G   Q       R     O                                           ")

(defun newhash ()
  (make-hash-table :test #'equal))

(defun sethash (key value hash)
  (setf (gethash key hash) value)
  hash)

(defun appendhash (key value hash)
  (sethash key (append (gethash key hash) (list value)) hash)
  )
(defun maze-to-hash (maze)
  (maze-to-hash-conditionally maze #'(lambda (c) (char= #\. c))))

(defun maze-to-hash-conditionally (maze condition)
  (let ((hash (newhash))
        (x 0)
        (y 0))
    (loop for c across maze do
      (cond
        ((= 10 (char-code c))
         (incf y)
         (setf x 0))
        ((funcall condition c)
         (sethash (list x y) c hash)
         (incf x))
        (t
         (incf x))))
    hash))

(defun passage-p (pos hash)
  (not (null (gethash pos hash))))

(defun teleport-p (pos hash)
  (let ((value (gethash pos hash)))
    (and (not (null value)) (listp value))))

(defun extract-teleports (maze)
  (map 'string #'identity
       (loop for c across maze
             collect
             (if (or (= 10 (char-code c))
                     (and (char>= c #\A) (char<= c #\Z))) c #\ ))))

(defun teleports-to-hash (maze)
  (let ((hash
          (maze-to-hash-conditionally
           maze
           #'(lambda (c) (or (char= #\. c) (and (char>= c #\A) (char<= c #\Z)))))))
    hash))

(defun teleport-coords-name (pos hash)
  (let* ((vectors '((-1 0) (1 0) (0 -1) (0 1)))
         (type (gethash pos hash))
         (values (sort (loop for v in vectors
                             for e = (gethash (map 'list #'+ v pos) hash)
                             when (not (null e)) collect e) #'char>=)))
    (if (and (char>= type #\A) (char<= type #\Z) (not (null (find #\. values))))
        (sort (map 'string #'identity (list type (car values))) #'char<=)
        nil)))

(defun teleports-hash (hash)
  (let ((teleports-hash (newhash)))
    (loop for k being the hash-keys in hash
          for name = (teleport-coords-name k hash) then (teleport-coords-name k hash) do
            (if (not (null name))
                (appendhash name k teleports-hash)))
    teleports-hash))

(defun start-position (teleports-hash)
  (car (gethash "AA" teleports-hash)))

(defun end-position (teleports-hash)
  (car (gethash "ZZ" teleports-hash)))

(defun put-teleports (maze-hash teleports-hash)
  (loop for k being the hash-keys in teleports-hash do
    (destructuring-bind (a &optional (b nil)) (gethash k teleports-hash)
      (cond
        ((not (null b))
         (sethash a b maze-hash)
         (sethash b a maze-hash))
        (t (sethash a 'level-0 maze-hash)))))
  maze-hash)

(defun make-input-hashes (input)
  (let* ((maze-hash (maze-to-hash input))
          (teleports-hash (teleports-hash (teleports-to-hash input)))
          (start (start-position teleports-hash))
         (end (end-position teleports-hash)))
    (put-teleports maze-hash teleports-hash)
    (format t "start: ~a, end: ~a, maze-end: ~a~%" start end (gethash end maze-hash))
    (append (list start end maze-hash teleports-hash) (get-min-max-x-y teleports-hash))))

(defun get-min-max-x-y (hash)
  (let ((min-x (loop for ((x nil) nil) being the hash-values in hash minimize x))
        (max-x (loop for ((x nil) nil) being the hash-values in hash maximize x))
        (min-y (loop for ((nil y) nil) being the hash-values in hash minimize y))
        (max-y (loop for ((nil y) nil) being the hash-values in hash maximize y)))
    (list min-x max-x min-y max-y)))

(defun run (input)
  (destructuring-bind (start end maze-hash teleports-hash min-x max-x min-y max-y)
      (make-input-hashes input)
    (declare (ignore teleports-hash))
    (format t "min-x ~a max-x ~a min-y ~a max-y ~a~%" min-x max-x min-y max-y)
    (spread-one-step (sethash (list 0 start) (list 0 start) (newhash))
                     (newhash)
                     maze-hash -1 (list 0 end)
                     min-x max-x min-y max-y)))

(defun spread-one-step (last-visited all-visited maze steps end min-x max-x min-y max-y)
  (let ((next-visited (newhash)))
    (loop for x being the hash-keys in last-visited do
      (let ((next (get-next x all-visited maze min-x max-x min-y max-y)))
        (mergehash next-visited next)))
    (cond
        ((not (null (gethash end next-visited))) steps)
        (t
         (spread-one-step next-visited
                          (mergehash all-visited last-visited)
                          maze (1+ steps) end min-x max-x min-y max-y)))))

(defun mergehash (to from)
  (loop for k being the hash-keys in from do
    (sethash k (gethash k from) to))
  to)

(defun get-next (level-pos visited maze min-x max-x min-y max-y)
  (destructuring-bind (level pos) level-pos
      (let* ((vectors '((-1 0) (1 0) (0 -1) (0 1)))
             (new-pos (loop for v in vectors collecting (map 'list #'+ v pos)))
             (next (newhash)))
        (loop for p in new-pos do
          (let ((v (gethash p maze)))
            (cond
              ((and (null (gethash p visited))
                    (not (null v)))
               (cond ((listp v)
                      (let ((next-level (+ level 0))) ;;(level-change v min-x max-x min-y max-y)
                        ;;                      (format t "level: ~a, pos: ~a~%" next-level v)

                        (if (>= next-level 0)
                            (let ((next-next
                                    (get-next (list next-level v)
                                              next maze min-x max-x min-y max-y)))
                              (sethash (list level p) 'portal next)
;;                              (format t "next for ~a~%" level-pos)
;;                              (print-hash next-next)
                              (mergehash next next-next)
;;                              (format t "next hash:~%")
;;                              (print-hash next)
                              ))))
                     (t
                      (sethash (list level p) (list level p) next))))
              (t nil))))
        next)))

(defun level-change (pos min-x max-x min-y max-y)
  (destructuring-bind (x y) pos
    (let ((change (cond
                    ((or (<= x min-x) (<= y min-y) (>= x max-x) (>= y max-y)) -1)
                    (t 1))))
;;      (format t "Level change ~a for ~a~%" change pos)
      change)))

(defun print-hash (hash)
  (loop for k being the hash-keys in hash do
    (format t "~a ~a~%" k (gethash k hash))))

(defun sample1 ()
  "         A
         A
  #######.#########
  #######.........#
  #######.#######.#
  #######.#######.#
  #######.#######.#
  #####  B    ###.#
BC...##  C    ###.#
  ##.##       ###.#
  ##...DE  F  ###.#
  #####    G  ###.#
  #########.#####.#
DE..#######...###.#
  #.#########.###.#
FG..#########.....#
  ###########.#####
             Z
             Z")

(defun sample2 ()
  "                   A
                   A
  #################.#############
  #.#...#...................#.#.#
  #.#.#.###.###.###.#########.#.#
  #.#.#.......#...#.....#.#.#...#
  #.#########.###.#####.#.#.###.#
  #.............#.#.....#.......#
  ###.###########.###.#####.#.#.#
  #.....#        A   C    #.#.#.#
  #######        S   P    #####.#
  #.#...#                 #......VT
  #.#.#.#                 #.#####
  #...#.#               YN....#.#
  #.###.#                 #####.#
DI....#.#                 #.....#
  #####.#                 #.###.#
ZZ......#               QG....#..AS
  ###.###                 #######
JO..#.#.#                 #.....#
  #.#.#.#                 ###.#.#
  #...#..DI             BU....#..LF
  #####.#                 #.#####
YN......#               VT..#....QG
  #.###.#                 #.###.#
  #.#...#                 #.....#
  ###.###    J L     J    #.#.###
  #.....#    O F     P    #.#...#
  #.###.#####.#.#####.#####.###.#
  #...#.#.#...#.....#.....#.#...#
  #.#####.###.###.#.#.#########.#
  #...#.#.....#...#.#.#.#.....#.#
  #.###.#####.###.###.#.#.#######
  #.#.........#...#.............#
  #########.###.###.#############
           B   J   C
           U   P   P")

(defun sample3 ()
  "             Z L X W       C
             Z P Q B       K
  ###########.#.#.#.#######.###############
  #...#.......#.#.......#.#.......#.#.#...#
  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###
  #.#...#.#.#...#.#.#...#...#...#.#.......#
  #.###.#######.###.###.#.###.###.#.#######
  #...#.......#.#...#...#.............#...#
  #.#########.#######.#.#######.#######.###
  #...#.#    F       R I       Z    #.#.#.#
  #.###.#    D       E C       H    #.#.#.#
  #.#...#                           #...#.#
  #.###.#                           #.###.#
  #.#....OA                       WB..#.#..ZH
  #.###.#                           #.#.#.#
CJ......#                           #.....#
  #######                           #######
  #.#....CK                         #......IC
  #.###.#                           #.###.#
  #.....#                           #...#.#
  ###.###                           #.#.#.#
XF....#.#                         RF..#.#.#
  #####.#                           #######
  #......CJ                       NM..#...#
  ###.#.#                           #.###.#
RE....#.#                           #......RF
  ###.###        X   X       L      #.#.#.#
  #.....#        F   Q       P      #.#.#.#
  ###.###########.###.#######.#########.###
  #.....#...#.....#.......#...#.....#.#...#
  #####.#.###.#######.#######.###.###.#.#.#
  #.......#.......#.#.#.#.#...#...#...#.#.#
  #####.###.#####.#.#.#.#.###.###.#.###.###
  #.......#.....#.#...#...............#...#
  #############.#.#.###.###################
               A O F   N
               A A D   M                     ")

;; day 20, part 1
(time (assert (= 604 (run (input)))))
